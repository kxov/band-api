# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    _instanceof:
        App\Shared\Application\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        App\Shared\Application\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }

        App\Shared\Domain\Event\EventHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: event.bus }


    App\Shared\Infrastructure\Doctrine\DomainEventSubscriber:
        tags: [ { name: 'doctrine.event_subscriber' } ]
        arguments:
            $containerBag: '@service_container'


    App\User\Infrastructure\Controller\:
        resource: '../src/User/Infrastructure/Controller/'
        tags: [ 'controller.service_arguments' ]

    App\Band\Infrastructure\Controller\:
        resource: '../src/Band/Infrastructure/Controller/'
        tags: [ 'controller.service_arguments' ]

    App\Shared\Infrastructure\ArgumentResolver\CommandResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 102 }

    App\Shared\Infrastructure\Listener\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 1 }